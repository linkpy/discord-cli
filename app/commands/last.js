// Generated by CoffeeScript 1.9.3
var Command, LastCommand,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Command = require("../command.js").Command;

LastCommand = (function(superClass) {
  extend(LastCommand, superClass);

  function LastCommand(app, mainscreen) {
    LastCommand.__super__.constructor.call(this, app, mainscreen, "last");
    this.storage = mainscreen.storage;
  }

  LastCommand.prototype.haveSuggestions = function(argidx) {
    return argidx === 0;
  };

  LastCommand.prototype.suggestions = function(arg, argidx) {
    if (argidx === 0) {
      return ["in-servers", "in-friends"].filter(function(a) {
        return a.startsWith(arg);
      });
    }
    return [];
  };

  LastCommand.prototype.argumentName = function(argidx) {
    if (argidx === 0) {
      return "Where";
    }
    return "Max 1 argument";
  };

  LastCommand.prototype.execute = function(args) {
    var c, g, m, notif;
    notif = this.mainscreen.notifications;
    if (args.length > 0) {
      if (args[0] === "in-servers") {
        if (notif.last_guild_msgs.length === 0) {
          throw new Error("No new messages in any servers.");
        }
        m = notif.last_guild_msgs[notif.last_guild_msgs.length - 1];
        c = m.channel;
        g = m.guild;
        this.storage.selectGuild(g, false);
        this.storage.selectChannel(c);
      }
      if (args[0] === "in-friends") {
        if (notif.last_friend_msgs.length === 0) {
          throw new Error("No new messages from any friends.");
        }
        m = notif.last_friend_msgs[notif.last_friend_msgs.length - 1];
        c = m.channel;
        this.storage.selectGuild(null, false);
        return this.storage.selectChannel(c);
      }
    } else {
      if (notif.last_msgs.length === 0) {
        throw new Error("No new messages.");
      }
      m = notif.last_msgs[notif.last_msgs.length - 1];
      c = m.channel;
      g = m.guild;
      this.storage.selectGuild(g, false);
      return this.storage.selectChannel(c);
    }
  };

  LastCommand.prototype.getHelpText = function() {
    return ["{magenta-fg}/last [where]{/}", "", "Go to the last message.", "", "    {blue-fg}{bold}/last{/} : Go to the last message received.", "    {blue-fg}{bold}/last in-servers : Go to the last message received in a server.", "    {blue-fg}{bold}/last in-friends{/} : Go to the last direct message sent by a friend."];
  };

  return LastCommand;

})(Command);

exports.Command = LastCommand;
